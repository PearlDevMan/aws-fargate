// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jpignata/fargate/acm (interfaces: Client)

// Package mock_acm is a generated GoMock package.
package client

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// DeleteCertificate mocks base method
func (m *MockClient) DeleteCertificate(arg0 string) error {
	ret := m.ctrl.Call(m, "DeleteCertificate", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCertificate indicates an expected call of DeleteCertificate
func (mr *MockClientMockRecorder) DeleteCertificate(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCertificate", reflect.TypeOf((*MockClient)(nil).DeleteCertificate), arg0)
}

// GetCertificateArns mocks base method
func (m *MockClient) GetCertificateArns(arg0 string) ([]string, error) {
	ret := m.ctrl.Call(m, "GetCertificateArns", arg0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCertificateArns indicates an expected call of GetCertificateArns
func (mr *MockClientMockRecorder) GetCertificateArns(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCertificateArns", reflect.TypeOf((*MockClient)(nil).GetCertificateArns), arg0)
}

// RequestCertificate mocks base method
func (m *MockClient) RequestCertificate(arg0 string, arg1 []string) (string, error) {
	ret := m.ctrl.Call(m, "RequestCertificate", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestCertificate indicates an expected call of RequestCertificate
func (mr *MockClientMockRecorder) RequestCertificate(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestCertificate", reflect.TypeOf((*MockClient)(nil).RequestCertificate), arg0, arg1)
}
